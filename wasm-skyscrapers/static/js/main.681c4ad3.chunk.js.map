{"version":3,"sources":["skyscrapers.js","App.js","serviceWorker.js","index.js"],"names":["solvePuzzleVanillaJs","clues","p","matrix","observed","possible","mIndex","findIndex","m","every","r","i","getArr","indexOf","splice","concat","fillOne","filter","isMatchObserved","hintM","up","slice","right","down","reverse","left","forEach","h","setArr","createBaseMatrix","length","Error","console","error","cloneMatrix","map","row","num","isRow","cm","arr","calcUnique","_ref","x","y","reduce","s","empties","push","sort","a","b","findEmpty","_empties$","col","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","hintH","newMatrix","observe","count","maxHeight","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","partialMatrix","currentObserved","j","observeAll","Header","Layout","Content","InputGroup","Input","Group","solvePuzzleWasmInterops","buildSkyScrapers","window","_buildSkyScrapers","Int32Array","v","buf","Module","_malloc","BYTES_PER_ELEMENT","HEAP32","set","result","resultData","_free","isValidArr","ca","Array","isArray","arrEqual","isMatrixValid","SkyScrapersInput","inputStyle","width","textAlign","this","props","data","onMatrixChange","react_default","createElement","rowIndex","key","compact","cell","colIndex","input","style","defaultValue","onChange","e","target","maxLength","type","onMouseOver","select","Component","SkyScrapers","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","isError","message","benchmark","bind","assertThisInitialized","setState","suite","Benchmark","Suite","that","join","solvePuzzle","add","toString","f","name","on","event","String","run","async","masked","o","oneColumn","dataIndex","align","columns","es_row","span","offset","table","dataSource","0","1","2","3","showHeader","size","pagination","bordered","formatForTable","genSkyScrapers","es_button","loading","onClick","disabled","color","App","_this2","updatedData","parseInt","className","padding","card","App_SkyScrapersInput","App_SkyScrapers","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qVAAe,SAASA,EAAsBC,GAG5C,IAAMC,EA+QR,SAAeC,EAAQC,GACvB,IAAIC,EAAW,CAACF,GACZG,EAAS,KACb,MAGkB,KADhBA,EAASD,EAASE,UAAU,SAAAC,GAAC,QA7NXL,EA6N2BK,GA3NjCC,MACZ,SAACC,EAAGC,GAAJ,OAAkD,IAAxCC,EAAOT,EAAQQ,GAAG,GAAME,QAAQ,KAH5C,IAAoBV,MA2NP,CAQX,IAAIK,EAAIH,EAASC,GAEjBD,EAASS,OAAOR,EAAQ,GAGxBD,GAFAA,EAAWA,EAASU,OAAOC,EAAQR,KAEfS,OAClB,SAACf,GAAD,OAAOgB,EAAgBhB,EAAGE,KAI9B,OAAOC,EApSKc,CAmNZ,SAA0BlB,GAC1B,IAAImB,EAAKnB,EAAMoB,MAAM,EAAG,GACpBC,EAAQrB,EAAMoB,MAAM,EAAG,GACvBE,EAAOtB,EAAMoB,MAAM,EAAG,IAAIG,UAC1BC,EAAOxB,EAAMoB,MAAM,GAAI,IAAIG,UAE3BhB,EAAI,CACN,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IA+CZ,OA5CAY,EAAGM,QACD,SAACC,EAAGhB,GACQ,IAANgB,IACFnB,EAAIoB,EAAOpB,EAAGG,GAAG,EAAO,CAAC,EAAG,EAAG,EAAG,KAE1B,IAANgB,IACFnB,EAAIoB,EAAOpB,EAAGG,GAAG,EAAO,CAAC,EAAG,EAAG,EAAG,OAKxCY,EAAKG,QACH,SAACC,EAAGhB,GACQ,IAANgB,IACFnB,EAAIoB,EAAOpB,EAAGG,GAAG,EAAO,CAAC,EAAG,EAAG,EAAG,KAE1B,IAANgB,IACFnB,EAAIoB,EAAOpB,EAAGG,GAAG,EAAO,CAAC,EAAG,EAAG,EAAG,OAKxCc,EAAKC,QACH,SAACC,EAAGhB,GACQ,IAANgB,IACFnB,EAAIoB,EAAOpB,EAAGG,GAAG,EAAM,CAAC,EAAG,EAAG,EAAG,KAEzB,IAANgB,IACFnB,EAAIoB,EAAOpB,EAAGG,GAAG,EAAM,CAAC,EAAG,EAAG,EAAG,OAKvCW,EAAMI,QACJ,SAACC,EAAGhB,GACQ,IAANgB,IACFnB,EAAIoB,EAAOpB,EAAGG,GAAG,EAAM,CAAC,EAAG,EAAG,EAAG,KAEzB,IAANgB,IACFnB,EAAIoB,EAAOpB,EAAGG,GAAG,EAAM,CAAC,EAAG,EAAG,EAAG,OAKhCH,EA5QWqB,CAAiB5B,GAAQA,GACzC,GAAiB,IAAbC,EAAE4B,OACJ,MAAM,IAAIC,MAAM,2BAIlB,OAHW7B,EAAE4B,QAAU,GACrBE,QAAQC,MAAM,IAAIF,MAAM,iCAEnB7B,EAAE,GAGX,SAASgC,EAAY/B,GACrB,OAAOA,EAAOgC,IAAI,SAAAC,GAAG,OAAIA,EAAID,IAAI,SAAAR,GAAC,OAAIA,MAGtC,SAASf,EAAOT,EAAQkC,EAAKC,GAC7B,IAAMC,EAAKL,EAAY/B,GACvB,OAAImC,EACKC,EAAGF,GAEHE,EAAGJ,IAAI,SAAAC,GAAG,OAAIA,EAAIC,KAI3B,SAAST,EAAOzB,EAAQkC,EAAKC,EAAOE,GACpC,IAAMD,EAAKL,EAAY/B,GACvB,OAAImC,GACFE,EAAId,QACF,SAACC,EAAGhB,GACF4B,EAAGF,GAAK1B,GAAKgB,IAGVY,IAEPC,EAAId,QACF,SAACC,EAAGhB,GACF4B,EAAG5B,GAAG0B,GAAOV,IAGVY,GAuDT,SAASE,EAAWpC,EAApBqC,GAAwC,IAARC,EAAQD,EAARC,EAAGC,EAAKF,EAALE,EAWnC,OAVWvC,EAASwC,OAClB,SAACC,EAAG5C,GAAJ,OACEyC,IAAMzC,EAAEyC,EAAIG,EAAI,EAAIA,GACtB,GAESzC,EAASwC,OAClB,SAACC,EAAG5C,GAAJ,OACE0C,IAAM1C,EAAE0C,EAAIE,EAAI,EAAIA,GACtB,GA8BF,SAAS9B,EAAQb,GAEjB,IAAM4C,EA3BN,SAAmB5C,GACnB,IAAME,EAAW,GAqBjB,OAnBAF,EAAOuB,QACL,SAAChB,EAAGkC,GACFlC,EAAEgB,QACA,SAACC,EAAGgB,GACQ,IAANhB,GACFtB,EAAS2C,KAAK,CAACL,IAAGC,UAQ5BvC,EAAS4C,KACP,SAACC,EAAGC,GACF,OAAOV,EAAWpC,EAAU6C,GAAKT,EAAWpC,EAAU8C,KAInD9C,EAKS+C,CAAUjD,GAE1B,GAAuB,IAAnB4C,EAAQjB,OACV,MAAM,IAAIC,MAAM,4BACX,IAAAsB,EACYN,EAAQ,GAAjBJ,EADHU,EACGV,EAAGC,EADNS,EACMT,EAKX,OAlEF,SAAezC,EAAQwC,EAAGC,GAC1B,IAAMvC,EAAW,CAAC,EAAG,EAAG,EAAG,GAErB+B,EAAMxB,EAAOT,EAAQyC,GAAG,GACxBU,EAAM1C,EAAOT,EAAQwC,GAAG,GAJDY,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAM7B,QAAAC,EAAAC,EAAgB,GAAG7C,OAAOqB,EAAKkB,GAA/BO,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAqC,KAA1B5B,EAA0BgC,EAAAM,OACN,IAAzB5D,EAASQ,QAAQc,IACnBtB,EAASS,OAAOT,EAASQ,QAAQc,GAAI,IARZ,MAAAuC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAY7B,OAAOpD,EAqDmB+D,CAAMjE,EAAQwC,EAAGC,GAClBT,IACrB,SAACR,GACC,IAAM0C,EAAYnC,EAAY/B,GAK9B,OAJAkE,EAAUzB,GAAGD,GAAKhB,EAIX0C,IAMb,SAASC,EAAQ9B,GACjB,IAAI+B,EAAQ,EACRC,EAAY,EAFMC,GAAA,EAAAC,GAAA,EAAAC,OAAAjB,EAAA,IAGtB,QAAAkB,EAAAC,EAAcrC,EAAdqB,OAAAC,cAAAW,GAAAG,EAAAC,EAAAd,QAAAC,MAAAS,GAAA,EAAmB,KAAV9C,EAAUiD,EAAAX,MACbtC,EAAI6C,IACND,GAAS,EACTC,EAAY7C,IANM,MAAAuC,GAAAQ,GAAA,EAAAC,EAAAT,EAAA,YAAAO,GAAA,MAAAI,EAAAV,QAAAU,EAAAV,SAAA,WAAAO,EAAA,MAAAC,GAStB,OAAOJ,EAkIP,SAASrD,EAAgB4D,EAAe1E,GAGxC,IAFA,IAAM2E,EAjHN,SAAoB5E,GAEpB,IADA,IAAIiB,EAAK,GAAIG,EAAO,GAAIE,EAAO,GAAIH,EAAQ,GAClCX,EAAI,EAAGA,EAAIR,EAAO,GAAG2B,SAAUnB,GAEd,IADZC,EAAOT,EAAQQ,GAAG,GACtBE,QAAQ,IACdY,EAAKuB,KAAKsB,EAAQ1D,EAAOT,EAAQQ,GAAG,KACpCW,EAAM0B,KAAKsB,EAAQ1D,EAAOT,EAAQQ,GAAG,GAAMa,cAE3CC,EAAKuB,KAAK,GACV1B,EAAM0B,KAAK,IAGf,IAAK,IAAIgC,EAAI,EAAGA,EAAI7E,EAAO2B,SAAUkD,GAEX,IADZpE,EAAOT,EAAQ6E,GAAG,GACtBnE,QAAQ,IACdO,EAAG4B,KAAKsB,EAAQ1D,EAAOT,EAAQ6E,GAAG,KAClCzD,EAAKyB,KAAKsB,EAAQ1D,EAAOT,EAAQ6E,GAAG,GAAOxD,cAE3CJ,EAAG4B,KAAK,GACRzB,EAAKyB,KAAK,IAGd,MAAO,GAAGjC,OAAOK,EAAIE,EAAOC,EAAKC,UAAWC,EAAKD,WA2FzByD,CAAWH,GAE1BnE,EAAI,EAAGA,EAAIoE,EAAgBjD,QAAUnB,EAAIP,EAAS0B,SAAUnB,EACnE,GAA2B,IAAvBoE,EAAgBpE,IACF,IAAhBP,EAASO,IACToE,EAAgBpE,IAAMP,EAASO,GAC/B,OAAO,EAGX,OAAO,EAIP,IClTQuE,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QACVC,EAAaC,IAAMC,MAiBnBC,EAA0B,SAACvF,GAC/B,IAAMwF,EAAmBC,OAAOC,kBAG1BnD,EAAM,IAAIoD,WAAW3F,EAAM6B,QAEjC7B,EAAMyB,QACJ,SAACmE,EAAGlF,GACF6B,EAAI7B,GAAKkF,IAKb,IAAMC,EAAMJ,OAAOK,OAAOC,QAAQxD,EAAIV,OAASU,EAAIyD,mBAGnDP,OAAOK,OAAOG,OAAOC,IAAI3D,EAAKsD,GAAO,GAMrC,IAJA,IAAMM,EAASX,EAAiBK,EAAKtD,EAAIV,QAEnCuE,EAAa,GAEV1F,EAAI,EAAGA,EAAI,KAAMA,EACxB0F,EAAWrD,KAAK0C,OAAOK,OAAOG,OAAOE,EAASR,WAAWK,kBAAoBtF,IAM/E,OAFA+E,OAAOK,OAAOO,MAAMR,GAEb,CACLO,EAAWhF,MAAM,EAAG,GACpBgF,EAAWhF,MAAM,EAAG,GACpBgF,EAAWhF,MAAM,EAAG,IACpBgF,EAAWhF,MAAM,GAAI,MAMnBa,EAAc,SAAC/B,GAAD,OAClBA,EAAOgC,IAAI,SAAAC,GAAG,OAAIA,EAAID,IAAI,SAAAR,GAAC,OAAIA,OAE3Bf,EAAS,SAACT,EAAQkC,EAAKC,GAC3B,IAAMC,EAAKL,EAAY/B,GACvB,OAAImC,EACKC,EAAGF,GAEHE,EAAGJ,IAAI,SAAAC,GAAG,OAAIA,EAAIC,MAkBvBkE,EAAa,SAAC/D,GAClB,IAAMgE,EAAKhE,EAAIL,IAAI,SAAAR,GAAC,OAAIA,IAExB,OADA6E,EAAGvD,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAhBP,SAACD,EAAGC,GACnB,GAAIsD,MAAMC,QAAQxD,IAAMuD,MAAMC,QAAQvD,IAChCD,EAAEpB,SAAWqB,EAAErB,OAAQ,CACzB,IAAK,IAAInB,EAAI,EAAGA,EAAIuC,EAAEpB,SAAUnB,EAC9B,GAAIuC,EAAEvC,KAAOwC,EAAExC,GACb,OAAO,EAGX,OAAO,EAGX,OAAO,EAMAgG,CAASH,EAAI,CAAC,EAAG,EAAG,EAAG,KAG1BlC,EAAU,SAAC9B,GACf,IAAK+D,EAAW/D,GACd,MAAO,IAET,IAAI+B,EAAQ,EACRC,EAAY,EALOjB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAMvB,QAAAC,EAAAC,EAAcpB,EAAdqB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAmB,KAAV5B,EAAUgC,EAAAM,MACbtC,EAAI6C,IACND,GAAS,EACTC,EAAY7C,IATO,MAAAuC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAYvB,OAAOc,GAGHU,EAAa,SAAC9E,GAElB,IADA,IAAIiB,EAAK,GAAIG,EAAO,GAAIE,EAAO,GAAIH,EAAQ,GAClCX,EAAI,EAAGA,EAAIR,EAAO,GAAG2B,SAAUnB,EACtCc,EAAKuB,KAAKsB,EAAQ1D,EAAOT,EAAQQ,GAAG,KACpCW,EAAM0B,KAAKsB,EAAQ1D,EAAOT,EAAQQ,GAAG,GAAMa,YAE7C,IAAK,IAAIwD,EAAI,EAAGA,EAAI7E,EAAO2B,SAAUkD,EACnC5D,EAAG4B,KAAKsB,EAAQ1D,EAAOT,EAAQ6E,GAAG,KAClCzD,EAAKyB,KAAKsB,EAAQ1D,EAAOT,EAAQ6E,GAAG,GAAOxD,YAE7C,MAAO,GAAGT,OAAOK,EAAIE,EAAOC,EAAKC,UAAWC,EAAKD,YAG7CoF,EAAgB,SAACzG,GACrB,OAA4C,IAArC8E,EAAW9E,GAAQU,QAAQ,MAG9BgG,mLAEF,IAAMC,EAAa,CACjBC,MAAO,MACPC,UAAW,UAEP7G,EAAS+B,EAAY+E,KAAKC,MAAMC,MAChCC,EAAiBH,KAAKC,MAAME,gBAAkB,aACpD,OACEC,EAAAnE,EAAAoE,cAAA,YAEInH,EAAOgC,IACL,SAACC,EAAKmF,GAAN,OACEF,EAAAnE,EAAAoE,cAACjC,EAAD,CAAYmC,IAAG,OAAAzG,OAASwG,GAAYE,SAAO,GAEvCrF,EAAID,IACF,SAACuF,EAAMC,GAAP,OACEN,EAAAnE,EAAAoE,cAACM,EAAA,EAAD,CACEJ,IAAG,QAAAzG,OAAU4G,GACbE,MAAOf,EACP7C,MAAOyD,EACPI,aAAa,IACbC,SAAU,SAACC,GAAD,OAAOZ,EAAeY,EAAEC,OAAOhE,MAAO,CAAE7B,IAAKuF,EAAUrE,IAAKiE,KACtEW,UAAW,EACXC,KAAK,SACLC,YACE,SAACJ,GACCA,EAAEC,OAAOI,yBA3BNC,aA2CzBC,cACJ,SAAAA,EAAYrB,GAAO,IAAAsB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAxB,KAAAsB,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAxB,KAAAwB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA5B,KAAMC,KACD4B,MAAQ,CACXC,WAAW,EACXC,SAAS,EACTC,QAAS,GACT7C,OAAQ,MAGVoC,EAAKU,UAAYV,EAAKU,UAAUC,KAAfV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KATAA,2EAajBvB,KAAKoC,SAAS,CACZN,WAAW,EACXC,SAAS,EACTC,QAAS,GACT7C,OAAQ,OAEV,IAAMkD,EAAQ,IAAI5D,OAAO6D,UAAUC,MAE7BC,EAAOxC,KACTb,EAAS,KACT4C,GAAU,EACVC,EAAU,GAER7I,EAAW6E,EAAWwE,EAAKvC,MAAMC,MACvCsC,EAAKJ,SAAS,CACZL,SAAS,EACTC,QAAO,cAAAlI,OAAgBX,EAASsJ,KAAK,MAA9B,OAG6B,oBAA3BD,EAAKvC,MAAMyC,YACpBL,EAAMM,IAAI,OAAQ,WAChB,IACExD,EAASqD,EAAKvC,MAAMyC,YAAYvJ,GAChC,MAAO8D,GACP8E,GAAU,EACVC,EAAU/E,EAAI2F,cAGTpD,MAAMC,QAAQ+C,EAAKvC,MAAMyC,cAAgBF,EAAKvC,MAAMyC,YAAYlJ,MAAM,SAAAqJ,GAAC,MAAiB,oBAANA,MAC3FL,EAAKvC,MAAMyC,YAAYjI,QACrB,SAACoI,GACCR,EAAMM,IAAN,QAAA7I,OAAkB+I,EAAEC,MAAQ,WAC1B,IACE3D,EAAS0D,EAAE1J,GACX,MAAO8D,GACP8E,GAAU,EACVC,EAAU/E,EAAI2F,gBAKtBP,EAAMU,GAAG,WAAY,WACnBP,EAAKJ,SAAS,CACZJ,QAAO,GAAAlI,OAAK0I,EAAKX,MAAMG,QAAhB,gBAAAlI,OAAsCkG,KAAKhG,OAAO,WAAWkB,IAAI,cAK9EmH,EAAMU,GAAG,QAAS,SAASC,GACzBR,EAAKJ,SAAS,CACZL,SAAS,EACTC,QAAO,GAAAlI,OAAK0I,EAAKX,MAAMG,QAAhB,KAAAlI,OAA2BmJ,OAAOD,EAAMhC,aAEhD+B,GAAG,WAAY,WAChBP,EAAKJ,SAAS,CACZN,WAAW,EACX3C,SACA4C,UACAC,QAASA,GAAoBQ,EAAKX,MAAMG,YAEzCkB,IAAI,CAAEC,OAAS,2CAGLjD,EAAMkD,GACnB,OAAOlD,EAAKhF,IACV,SAACC,EAAKzB,GAAN,OACEyB,EAAIS,OACF,SAACyH,EAAGzE,EAAGlF,GAEL,OADS2J,EAAE3J,GAAX0J,EAAgB,IAAaxE,EACtByE,GAET,CACE9C,IAAG,OAAAzG,OAASJ,8CAMPR,EAAQkK,GACrB,IAAME,EAAY,CAAC,CACjBC,UAAW,IACXC,MAAO,WAGHC,EAAU,CAAC,CACfF,UAAW,IACXC,MAAO,UACN,CACDD,UAAW,IACXC,MAAO,UACN,CACDD,UAAW,IACXC,MAAO,UACN,CACDD,UAAW,IACXC,MAAO,WAGT,OACEpD,EAAAnE,EAAAoE,cAAA,YACED,EAAAnE,EAAAoE,cAACqD,EAAA,EAAD,KACEtD,EAAAnE,EAAAoE,cAAChE,EAAA,EAAD,CAAKsH,KAAM,GAAIC,OAAQ,GACrBxD,EAAAnE,EAAAoE,cAACwD,EAAA,EAAD,CACEJ,QAASA,EACTK,WAAY,CACV,CACEvD,IAAK,UACLwD,EAAK1G,EAAQ1D,EAAOT,EAAQ,GAAG,IAC/B8K,EAAK3G,EAAQ1D,EAAOT,EAAQ,GAAG,IAC/B+K,EAAK5G,EAAQ1D,EAAOT,EAAQ,GAAG,IAC/BgL,EAAK7G,EAAQ1D,EAAOT,EAAQ,GAAG,MAGnCiL,YAAY,EACZC,KAAK,QACLC,YAAY,EACZC,UAAQ,MAIdlE,EAAAnE,EAAAoE,cAAA,WACAD,EAAAnE,EAAAoE,cAACqD,EAAA,EAAD,KACEtD,EAAAnE,EAAAoE,cAAChE,EAAA,EAAD,CAAKsH,KAAM,GACTvD,EAAAnE,EAAAoE,cAACwD,EAAA,EAAD,CACEJ,QAASH,EACTQ,WAAY,CACV,CACEvD,IAAK,SACLwD,EAAK1G,EAAQ1D,EAAOT,EAAQ,GAAG,KAC9B,CACDqH,IAAK,SACLwD,EAAK1G,EAAQ1D,EAAOT,EAAQ,GAAG,KAC9B,CACDqH,IAAK,SACLwD,EAAK1G,EAAQ1D,EAAOT,EAAQ,GAAG,KAC9B,CACDqH,IAAK,SACLwD,EAAK1G,EAAQ1D,EAAOT,EAAQ,GAAG,MAGnCiL,YAAY,EACZC,KAAK,QACLC,YAAY,EACZC,UAAQ,KAGZlE,EAAAnE,EAAAoE,cAAChE,EAAA,EAAD,CAAKsH,KAAM,GAAIC,OAAQ,GACrBxD,EAAAnE,EAAAoE,cAACwD,EAAA,EAAD,CACEJ,QAASA,EACTK,WAAY9D,KAAKuE,eAAerL,EAAQkK,GACxCe,YAAY,EACZC,KAAK,QACLC,YAAY,EACZC,UAAQ,KAGZlE,EAAAnE,EAAAoE,cAAChE,EAAA,EAAD,CAAKsH,KAAM,EAAGC,OAAQ,GACpBxD,EAAAnE,EAAAoE,cAACwD,EAAA,EAAD,CACEJ,QAASH,EACTQ,WAAY,CACV,CACEvD,IAAK,UACLwD,EAAK1G,EAAQ1D,EAAOT,EAAQ,GAAG,GAAMqB,YACpC,CACDgG,IAAK,UACLwD,EAAK1G,EAAQ1D,EAAOT,EAAQ,GAAG,GAAMqB,YACpC,CACDgG,IAAK,UACLwD,EAAK1G,EAAQ1D,EAAOT,EAAQ,GAAG,GAAMqB,YACpC,CACDgG,IAAK,UACLwD,EAAK1G,EAAQ1D,EAAOT,EAAQ,GAAG,GAAMqB,aAGzC4J,YAAY,EACZC,KAAK,QACLC,YAAY,EACZC,UAAQ,MAIdlE,EAAAnE,EAAAoE,cAAA,WACAD,EAAAnE,EAAAoE,cAACqD,EAAA,EAAD,KACEtD,EAAAnE,EAAAoE,cAAChE,EAAA,EAAD,CAAKsH,KAAM,GAAIC,OAAQ,GACrBxD,EAAAnE,EAAAoE,cAACwD,EAAA,EAAD,CACEJ,QAASA,EACTK,WAAY,CACV,CACEvD,IAAK,aACLwD,EAAK1G,EAAQ1D,EAAOT,EAAQ,GAAG,GAAOqB,WACtCyJ,EAAK3G,EAAQ1D,EAAOT,EAAQ,GAAG,GAAOqB,WACtC0J,EAAK5G,EAAQ1D,EAAOT,EAAQ,GAAG,GAAOqB,WACtC2J,EAAK7G,EAAQ1D,EAAOT,EAAQ,GAAG,GAAOqB,aAG1C4J,YAAY,EACZC,KAAK,QACLC,YAAY,EACZC,UAAQ,wCASlB,IAAMpL,EAAS+B,EAAY+E,KAAKC,MAAMC,MAChCkD,EAASpD,KAAKC,MAAMmD,OAE1B,OACEhD,EAAAnE,EAAAoE,cAAA,QAAMO,MAAO,CAAEd,MAAO,QACnBE,KAAKwE,eAAetL,EAAQkK,GAE3BpD,KAAKC,MAAMmD,OAAShD,EAAAnE,EAAAoE,cAAA,WAAS,KAG7BL,KAAKC,MAAMmD,OACXhD,EAAAnE,EAAAoE,cAACoE,EAAA,EAAD,CACEvD,KAAK,UACLkD,KAAK,QACLM,QAAS1E,KAAK6B,MAAMC,UACpB6C,QAAS3E,KAAKiC,UACd2C,UAAWjF,EAAcK,KAAKC,MAAMC,OALtC,aAQY,KAGZF,KAAK6B,MAAMG,QACX5B,EAAAnE,EAAAoE,cAAA,MAAIO,MAAO,CAAEiE,MAAO7E,KAAK6B,MAAME,QAAU,MAAQ,UAAY/B,KAAK6B,MAAMG,SAAgB,KAGxFhC,KAAK6B,MAAM1C,OACXa,KAAKwE,eAAetL,GAAQ,GAAS,aAxPrBmI,aA2VXyD,cA3Fb,SAAAA,EAAY7E,GAAO,IAAA8E,EAAA,OAAAvD,OAAAC,EAAA,EAAAD,CAAAxB,KAAA8E,IACjBC,EAAAvD,OAAAE,EAAA,EAAAF,CAAAxB,KAAAwB,OAAAG,EAAA,EAAAH,CAAAsD,GAAAlD,KAAA5B,KAAMC,KACD4B,MAAQ,CACX3B,KAAM,CACJ,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAId6E,EAAK5E,eAAiB4E,EAAK5E,eAAe+B,KAApBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAuD,KAXLA,8EAcJnG,KAAiB,IAAZzD,EAAYM,EAAZN,IAAKkB,EAAOZ,EAAPY,IACjB2I,EAAc/J,EAAY+E,KAAK6B,MAAM3B,MAC3C8E,EAAY3I,GAAKlB,GAAO8J,SAASrG,EAAG,IACpCoB,KAAKoC,SAAS,CACZlC,KAAM8E,qCAKR,OACE5E,EAAAnE,EAAAoE,cAAA,OAAK6E,UAAU,OACb9E,EAAAnE,EAAAoE,cAACpC,EAAD,CAAQiH,UAAU,cAAlB,sBAGA9E,EAAAnE,EAAAoE,cAAClC,EAAD,CAASyC,MAAO,CAAEuE,QAAS,cACzB/E,EAAAnE,EAAAoE,cAACqD,EAAA,EAAD,KACEtD,EAAAnE,EAAAoE,cAAChE,EAAA,EAAD,CAAKsH,KAAM,GAAIC,OAAQ,GACrBxD,EAAAnE,EAAAoE,cAAC+E,EAAA,EAAD,KACEhF,EAAAnE,EAAAoE,cAAA,0BACAD,EAAAnE,EAAAoE,cAACgF,EAAD,CACEnF,KAAMF,KAAK6B,MAAM3B,KACjBC,eAAgBH,KAAKG,iBAEvBC,EAAAnE,EAAAoE,cAAA,WACAD,EAAAnE,EAAAoE,cAACiF,EAAD,CACEpF,KAAMF,KAAK6B,MAAM3B,OAEnBE,EAAAnE,EAAAoE,cAAA,WAEEV,EAAcK,KAAK6B,MAAM3B,MACvBE,EAAAnE,EAAAoE,cAAA,MAAIO,MAAO,CAAEiE,MAAO,UAApB,SAA4CzE,EAAAnE,EAAAoE,cAAA,MAAIO,MAAO,CAAEiE,MAAO,QAApB,cAKtDzE,EAAAnE,EAAAoE,cAAA,WACAD,EAAAnE,EAAAoE,cAACqD,EAAA,EAAD,KACEtD,EAAAnE,EAAAoE,cAAChE,EAAA,EAAD,CAAKsH,KAAM,GAAIC,OAAQ,GACrBxD,EAAAnE,EAAAoE,cAAC+E,EAAA,EAAD,KACEhF,EAAAnE,EAAAoE,cAAA,wBACAD,EAAAnE,EAAAoE,cAACiF,EAAD,CACEpF,KAAMF,KAAK6B,MAAM3B,KACjBwC,YAAa3J,EACbqK,QAAM,MAIZhD,EAAAnE,EAAAoE,cAAChE,EAAA,EAAD,CAAKsH,KAAM,GAAIC,OAAQ,GACrBxD,EAAAnE,EAAAoE,cAAC+E,EAAA,EAAD,KACEhF,EAAAnE,EAAAoE,cAAA,+BACAD,EAAAnE,EAAAoE,cAACiF,EAAD,CACEpF,KAAMF,KAAK6B,MAAM3B,KACjBwC,YAAanE,EACb6E,QAAM,OAKdhD,EAAAnE,EAAAoE,cAAA,WACAD,EAAAnE,EAAAoE,cAACqD,EAAA,EAAD,KACEtD,EAAAnE,EAAAoE,cAAChE,EAAA,EAAD,CAAKsH,KAAM,GAAIC,OAAQ,GACrBxD,EAAAnE,EAAAoE,cAAC+E,EAAA,EAAD,KACEhF,EAAAnE,EAAAoE,cAAA,8CACAD,EAAAnE,EAAAoE,cAACiF,EAAD,CACEpF,KAAMF,KAAK6B,MAAM3B,KACjBwC,YAAa,CAAC3J,EAAsBwF,GACpC6E,QAAM,gBAjFN/B,aC7ZEkE,QACW,cAA7B9G,OAAO+G,SAASC,UAEe,UAA7BhH,OAAO+G,SAASC,UAEhBhH,OAAO+G,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxF,EAAAnE,EAAAoE,cAACwF,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.681c4ad3.chunk.js","sourcesContent":["export default function solvePuzzleVanillaJs (clues) {\r\n  // console.log(clues)\r\n  // console.log(createBaseMatrix(clues))\r\n  const p = hintM(createBaseMatrix(clues), clues);\r\n  if (p.length === 0) {\r\n    throw new Error('ouch, no solution found');\r\n  } else if (p.length >= 2) {\r\n    console.error(new Error('ouch, solution is not unique'));\r\n  }\r\n  return p[0];\r\n}\r\n\r\nfunction cloneMatrix(matrix) {\r\nreturn matrix.map(row => row.map(h => h));\r\n}\r\n\r\nfunction getArr(matrix, num, isRow) {\r\nconst cm = cloneMatrix(matrix);\r\nif (isRow) {\r\n  return cm[num];\r\n} else {\r\n  return cm.map(row => row[num]);\r\n}\r\n}\r\n\r\nfunction setArr(matrix, num, isRow, arr) {\r\nconst cm = cloneMatrix(matrix);\r\nif (isRow) {\r\n  arr.forEach(\r\n    (h, i) => {\r\n      cm[num][i] = h;\r\n    }\r\n  );\r\n  return cm;\r\n} else {\r\n  arr.forEach(\r\n    (h, i) => {\r\n      cm[i][num] = h;\r\n    }\r\n  );\r\n  return cm;\r\n}\r\n}\r\n\r\nfunction arrEqual(a, b) {\r\nif (Array.isArray(a) && Array.isArray(b)) {\r\n  if (a.length === b.length) {\r\n    for (let i = 0; i < a.length; ++i) {\r\n      if (a[i] !== b[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\nreturn false;\r\n}\r\n\r\nfunction isComplete(matrix) {\r\n// quicker\r\nreturn matrix.every(\r\n  (r, i) => getArr(matrix, i, true).indexOf(0) === -1\r\n);\r\n}\r\n\r\nfunction isValidArr(arr) {\r\nconst ca = arr.map(h => h);\r\nca.sort((a, b) => a - b);\r\nreturn arrEqual(ca, [1, 2, 3, 4]);\r\n}\r\n\r\nfunction isValid(matrix) {\r\nreturn matrix.every(\r\n  (r, i) => isValidArr(getArr(matrix, i, true))\r\n) &&\r\n  matrix.every(\r\n    (r, i) => isValidArr(getArr(matrix, i, false))\r\n  );\r\n}\r\n\r\nfunction hintH(matrix, x, y) {\r\nconst possible = [1, 2, 3, 4];\r\n\r\nconst row = getArr(matrix, y, true);\r\nconst col = getArr(matrix, x, false);\r\n\r\nfor (const h of [].concat(row, col)) {\r\n  if (possible.indexOf(h) !== -1) {\r\n    possible.splice(possible.indexOf(h), 1);\r\n  }\r\n}\r\n\r\nreturn possible;\r\n}\r\n\r\nfunction calcUnique(possible, { x, y }) {\r\nconst uX = possible.reduce(\r\n  (s, p) =>\r\n    x === p.x ? s + 1 : s,\r\n  0\r\n);\r\nconst uY = possible.reduce(\r\n  (s, p) =>\r\n    y === p.y ? s + 1 : s,\r\n  0\r\n);\r\nreturn uX + uY;\r\n}\r\n\r\nfunction findEmpty(matrix) {\r\nconst possible = [];\r\n\r\nmatrix.forEach(\r\n  (r, y) => {\r\n    r.forEach(\r\n      (h, x) => {\r\n        if (h === 0) {\r\n          possible.push({x, y});\r\n        }\r\n      }\r\n    );\r\n  }\r\n);\r\n\r\n// we prefer one that is the only empty one in its row & col \r\npossible.sort(\r\n  (a, b) => {\r\n    return calcUnique(possible, a) - calcUnique(possible, b);\r\n  }\r\n);\r\n\r\nreturn possible;\r\n}\r\n\r\nfunction fillOne(matrix) {\r\n// return an array which has one less empty height than current\r\nconst empties = findEmpty(matrix);\r\n\r\nif (empties.length === 0) {\r\n  throw new Error('matrix already completed');\r\n} else {\r\n  const { x, y } = empties[0];\r\n  // console.log('=====hinted height===== ')\r\n  // console.log({ x, y })\r\n  // console.log(hintH(matrix, x, y));\r\n  const possibleHeights = hintH(matrix, x, y);\r\n  return possibleHeights.map(\r\n    (h) => {\r\n      const newMatrix = cloneMatrix(matrix);\r\n      newMatrix[y][x] = h;\r\n      // console.log('=====matrix=====')\r\n      // console.log(matrix)\r\n      // console.log(newMatrix)\r\n      return newMatrix;\r\n    }\r\n  );\r\n}\r\n}\r\n\r\nfunction observe(arr) {\r\nlet count = 0;\r\nlet maxHeight = 0;\r\nfor (let h of arr) {\r\n  if (h > maxHeight) {\r\n    count += 1;\r\n    maxHeight = h;\r\n  }\r\n}\r\nreturn count;\r\n}\r\n\r\n/*\r\nfunction observeAll(matrix) {\r\nlet up = [], down = [], left = [], right = [];\r\nfor (let i = 0; i < matrix.length; ++i) {\r\n  left.push(observe(getArr(matrix, i, true)));\r\n  right.push(observe(getArr(matrix, i, true).reverse()));\r\n}\r\nfor (let j = 0; j < matrix[0].length; ++j) {\r\n  up.push(observe(getArr(matrix, j, false)));\r\n  down.push(observe(getArr(matrix, j, false).reverse()));\r\n}\r\nreturn [].concat(up, right, down, left);\r\n}\r\n*/\r\n\r\nfunction observeAll(matrix) {\r\nlet up = [], down = [], left = [], right = [];\r\nfor (let i = 0; i < matrix[0].length; ++i) {\r\n  const row = getArr(matrix, i, true);\r\n  if (row.indexOf(0) === -1) {\r\n    left.push(observe(getArr(matrix, i, true)));\r\n    right.push(observe(getArr(matrix, i, true).reverse()));\r\n  } else {\r\n    left.push(0);\r\n    right.push(0);\r\n  }\r\n}\r\nfor (let j = 0; j < matrix.length; ++j) {\r\n  const col = getArr(matrix, j, false);\r\n  if (col.indexOf(0) === -1) {\r\n    up.push(observe(getArr(matrix, j, false)));\r\n    down.push(observe(getArr(matrix, j, false).reverse()));\r\n  } else {\r\n    up.push(0);\r\n    down.push(0);\r\n  }\r\n}\r\nreturn [].concat(up, right, down.reverse(), left.reverse());\r\n}\r\n\r\n// key point: if 4 , must be 1234, if 1, must be 4xxx\r\n// TODO more hints for performance\r\n\r\nfunction createBaseMatrix(clues) {\r\nlet up = clues.slice(0, 4);\r\nlet right = clues.slice(4, 8);\r\nlet down = clues.slice(8, 12).reverse();\r\nlet left = clues.slice(12, 16).reverse();\r\n\r\nlet m = [\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0]\r\n];\r\n\r\nup.forEach(\r\n  (h, i) => {\r\n    if (h === 4) {\r\n      m = setArr(m, i, false, [1, 2, 3, 4]);\r\n    }\r\n    if (h === 1) {\r\n      m = setArr(m, i, false, [4, 0, 0, 0]);\r\n    }\r\n  }\r\n);\r\n\r\ndown.forEach(\r\n  (h, i) => {\r\n    if (h === 4) {\r\n      m = setArr(m, i, false, [4, 3, 2, 1]);\r\n    }\r\n    if (h === 1) {\r\n      m = setArr(m, i, false, [0, 0, 0, 4]);\r\n    }\r\n  }\r\n);\r\n\r\nleft.forEach(\r\n  (h, i) => {\r\n    if (h === 4) {\r\n      m = setArr(m, i, true, [1, 2, 3, 4]);\r\n    }\r\n    if (h === 1) {\r\n      m = setArr(m, i, true, [4, 0, 0, 0]);\r\n    }\r\n  }\r\n);\r\n\r\nright.forEach(\r\n  (h, i) => {\r\n    if (h === 4) {\r\n      m = setArr(m, i, true, [4, 3, 2, 1]);\r\n    }\r\n    if (h === 1) {\r\n      m = setArr(m, i, true, [0, 0, 0, 4]);\r\n    }\r\n  }\r\n);\r\n\r\nreturn m;\r\n};\r\n\r\nfunction hintM(matrix, observed) {\r\nlet possible = [matrix];\r\nlet mIndex = null;\r\nwhile (true) {\r\n  // console.log(possible.length)\r\n  mIndex = possible.findIndex(m => !isComplete(m));\r\n  if (mIndex === -1) {\r\n    // console.log('=====all complete=====')\r\n    // console.log(possible)\r\n    break;\r\n  }\r\n  let m = possible[mIndex];\r\n  // console.log(m)\r\n  possible.splice(mIndex, 1);\r\n  possible = possible.concat(fillOne(m));\r\n  // cut branch early if violation is found\r\n  possible = possible.filter(\r\n    (p) => isMatchObserved(p, observed)\r\n  );\r\n}\r\n\r\nreturn possible;\r\n}\r\n\r\nfunction isMatchObserved(partialMatrix, observed) {\r\nconst currentObserved = observeAll(partialMatrix);\r\n// console.log(observed)\r\nfor (let i = 0; i < currentObserved.length && i < observed.length; ++i) {\r\n  if (currentObserved[i] !== 0 &&\r\n    observed[i] !== 0 &&\r\n    currentObserved[i] != observed[i]) {\r\n    return false;\r\n  }\r\n}\r\nreturn true;\r\n}\r\n\r\n\r\nconst example = [\r\n  [2, 1, 4, 3],\r\n  [3, 4, 1, 2],\r\n  [4, 2, 3, 1],\r\n  [1, 3, 2, 4]\r\n];\r\n\r\n/*\r\nconsole.log(isValid(example))\r\n\r\nconsole.log(isComplete(example))\r\n\r\nconsole.log(observeAll(example))\r\n\r\nconst hm = createBaseMatrix(observeAll(example));\r\n\r\nconsole.log(hm)\r\n\r\nconsole.log(findEmpty(hm))\r\n\r\nconsole.log(isComplete(hm))\r\n*/\r\n\r\n// const o = observeAll(example);\r\n\r\n// console.log(o)\r\n\r\n// console.log(hintM([ [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ] ], o))\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Input, Button, Card, Layout, Table } from 'antd';\r\n\r\nimport './App.css';\r\nimport solvePuzzleVanillaJs from './skyscrapers';\r\n\r\nconst { Header, Content } = Layout;\r\nconst InputGroup = Input.Group;\r\n\r\n/*\r\nconst transpose = (matrix) => {\r\n  const width = matrix.length;\r\n  const length = matrix[0].length;\r\n  const transposed = [];\r\n  for (let i = 0; i < length; ++i) {\r\n    const row = [];\r\n    for (let j = 0; j < width; ++j) {\r\n      row.push(matrix[j][i]);\r\n    }\r\n    transposed.push(row);\r\n  }\r\n  return transposed;\r\n};\r\n*/\r\nconst solvePuzzleWasmInterops = (clues) => {\r\n  const buildSkyScrapers = window._buildSkyScrapers;\r\n\r\n  // typeless to typed\r\n  const arr = new Int32Array(clues.length);\r\n\r\n  clues.forEach(\r\n    (v, i) => {\r\n      arr[i] = v;\r\n    }\r\n  );\r\n\r\n  // allocate memory and get address(pointer)\r\n  const buf = window.Module._malloc(arr.length * arr.BYTES_PER_ELEMENT);\r\n\r\n  // write data into memory, possible types are HEAP8/16/32, HEAPF32/64, HEAPU8/16/32\r\n  window.Module.HEAP32.set(arr, buf >> 2);\r\n\r\n  const result = buildSkyScrapers(buf, arr.length);\r\n\r\n  const resultData = []\r\n\r\n  for (let i = 0; i < 16; ++i) {\r\n    resultData.push(window.Module.HEAP32[result / Int32Array.BYTES_PER_ELEMENT + i]);\r\n  }\r\n\r\n  // don't forget\r\n  window.Module._free(buf);\r\n\r\n  return [\r\n    resultData.slice(0, 4),\r\n    resultData.slice(4, 8),\r\n    resultData.slice(8, 12),\r\n    resultData.slice(12, 16)\r\n  ];\r\n};\r\n\r\n// console.warn(solvePuzzleWasmInterops([3, 2, 2, 1, 1, 2, 4, 2, 3, 1, 3, 2, 2, 1, 2, 4]))\r\n\r\nconst cloneMatrix = (matrix) =>\r\n  matrix.map(row => row.map(h => h));\r\n\r\nconst getArr = (matrix, num, isRow) => {\r\n  const cm = cloneMatrix(matrix);\r\n  if (isRow) {\r\n    return cm[num];\r\n  } else {\r\n    return cm.map(row => row[num]);\r\n  }\r\n};\r\n\r\nconst arrEqual = (a, b) => {\r\n  if (Array.isArray(a) && Array.isArray(b)) {\r\n    if (a.length === b.length) {\r\n      for (let i = 0; i < a.length; ++i) {\r\n        if (a[i] !== b[i]) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nconst isValidArr = (arr) => {\r\n  const ca = arr.map(h => h);\r\n  ca.sort((a, b) => a - b);\r\n  return arrEqual(ca, [1, 2, 3, 4]);\r\n}\r\n\r\nconst observe = (arr) => {\r\n  if (!isValidArr(arr)) {\r\n    return 'X';\r\n  }\r\n  let count = 0;\r\n  let maxHeight = 0;\r\n  for (let h of arr) {\r\n    if (h > maxHeight) {\r\n      count += 1;\r\n      maxHeight = h;\r\n    }\r\n  }\r\n  return count;\r\n}\r\n\r\nconst observeAll = (matrix) => {\r\n  let up = [], down = [], left = [], right = [];\r\n  for (let i = 0; i < matrix[0].length; ++i) {\r\n    left.push(observe(getArr(matrix, i, true)));\r\n    right.push(observe(getArr(matrix, i, true).reverse()));\r\n  }\r\n  for (let j = 0; j < matrix.length; ++j) {\r\n    up.push(observe(getArr(matrix, j, false)));\r\n    down.push(observe(getArr(matrix, j, false).reverse()));\r\n  }\r\n  return [].concat(up, right, down.reverse(), left.reverse());\r\n}\r\n\r\nconst isMatrixValid = (matrix) => {\r\n  return observeAll(matrix).indexOf('X') === -1;\r\n};\r\n\r\nclass SkyScrapersInput extends Component {\r\n  render() {\r\n    const inputStyle = {\r\n      width: '15%',\r\n      textAlign: 'center'\r\n    };\r\n    const matrix = cloneMatrix(this.props.data);\r\n    const onMatrixChange = this.props.onMatrixChange || function() {};\r\n    return (\r\n      <span>\r\n        {\r\n          matrix.map(\r\n            (row, rowIndex) => (\r\n              <InputGroup key={`row_${rowIndex}`} compact>\r\n                {\r\n                  row.map(\r\n                    (cell, colIndex) => (\r\n                      <Input\r\n                        key={`cell_${colIndex}`}\r\n                        style={inputStyle}\r\n                        value={cell}\r\n                        defaultValue=\"0\"\r\n                        onChange={(e) => onMatrixChange(e.target.value, { row: colIndex, col: rowIndex })}\r\n                        maxLength={1}\r\n                        type=\"number\"\r\n                        onMouseOver={\r\n                          (e) => {\r\n                            e.target.select();\r\n                          }\r\n                        }\r\n                      />\r\n                    )\r\n                  )\r\n                }\r\n              </InputGroup>\r\n            )\r\n          )\r\n        }\r\n      </span>\r\n    );\r\n  };\r\n}\r\n\r\nclass SkyScrapers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isError: false,\r\n      message: '',\r\n      result: null\r\n    };\r\n\r\n    this.benchmark = this.benchmark.bind(this);\r\n  }\r\n\r\n  benchmark() {\r\n    this.setState({\r\n      isLoading: true,\r\n      isError: false,\r\n      message: '',\r\n      result: null\r\n    });\r\n    const suite = new window.Benchmark.Suite();\r\n\r\n    const that = this;\r\n    let result = null;\r\n    let isError = false;\r\n    let message = '';\r\n\r\n    const observed = observeAll(that.props.data);\r\n    that.setState({\r\n      isError: false,\r\n      message: `Observed: [${observed.join(', ')}]`\r\n    });\r\n\r\n    if (typeof that.props.solvePuzzle === 'function') {\r\n      suite.add('test', function() {\r\n        try {\r\n          result = that.props.solvePuzzle(observed);\r\n        } catch (err) {\r\n          isError = true;\r\n          message = err.toString();\r\n        }\r\n      });\r\n    } else if (Array.isArray(that.props.solvePuzzle) && that.props.solvePuzzle.every(f => typeof f === 'function')) {\r\n      that.props.solvePuzzle.forEach(\r\n        (f) => {\r\n          suite.add(`test#${f.name}`, function() {\r\n            try {\r\n              result = f(observed);\r\n            } catch (err) {\r\n              isError = true;\r\n              message = err.toString();\r\n            }\r\n          });\r\n        }\r\n      );\r\n      suite.on('complete', function() {\r\n        that.setState({\r\n          message: `${that.state.message} Fastest is ${this.filter('fastest').map('name')}`\r\n        });\r\n      });\r\n    }\r\n\r\n    suite.on('cycle', function(event) {\r\n      that.setState({\r\n        isError: false,\r\n        message: `${that.state.message} ${String(event.target)}`\r\n      });\r\n    }).on('complete', function() {\r\n      that.setState({\r\n        isLoading: false,\r\n        result,\r\n        isError,\r\n        message: message ? message : that.state.message\r\n      });\r\n    }).run({ 'async': true });\r\n  }\r\n\r\n  formatForTable(data, masked) {\r\n    return data.map(\r\n      (row, i) =>\r\n        row.reduce(\r\n          (o, v, i) => {\r\n            masked ? o[i] = 'X' : o[i] = v;\r\n            return o;\r\n          },\r\n          {\r\n            key: `row_${i}`\r\n          }\r\n        )\r\n    );\r\n  }\r\n\r\n  genSkyScrapers(matrix, masked) {\r\n    const oneColumn = [{\r\n      dataIndex: '0',\r\n      align: 'center'\r\n    }];\r\n\r\n    const columns = [{\r\n      dataIndex: '0',\r\n      align: 'center'\r\n    }, {\r\n      dataIndex: '1',\r\n      align: 'center'\r\n    }, {\r\n      dataIndex: '2',\r\n      align: 'center'\r\n    }, {\r\n      dataIndex: '3',\r\n      align: 'center'\r\n    }];\r\n  \r\n    return (\r\n      <span>\r\n        <Row>\r\n          <Col span={14} offset={5}>\r\n            <Table\r\n              columns={columns}\r\n              dataSource={[\r\n                {\r\n                  key: 'row_top',\r\n                  '0': observe(getArr(matrix, 0, false)),\r\n                  '1': observe(getArr(matrix, 1, false)),\r\n                  '2': observe(getArr(matrix, 2, false)),\r\n                  '3': observe(getArr(matrix, 3, false))\r\n                }\r\n              ]}\r\n              showHeader={false}\r\n              size=\"small\"\r\n              pagination={false}\r\n              bordered\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br /> \r\n        <Row>\r\n          <Col span={4}>\r\n            <Table\r\n              columns={oneColumn}\r\n              dataSource={[\r\n                {\r\n                  key: 'left_0',\r\n                  '0': observe(getArr(matrix, 0, true))\r\n                }, {\r\n                  key: 'left_1',\r\n                  '0': observe(getArr(matrix, 1, true))\r\n                }, {\r\n                  key: 'left_2',\r\n                  '0': observe(getArr(matrix, 2, true))\r\n                }, {\r\n                  key: 'left_3',\r\n                  '0': observe(getArr(matrix, 3, true))\r\n                }\r\n              ]}\r\n              showHeader={false}\r\n              size=\"small\"\r\n              pagination={false}\r\n              bordered\r\n            />\r\n          </Col>\r\n          <Col span={14} offset={1}>\r\n            <Table\r\n              columns={columns}\r\n              dataSource={this.formatForTable(matrix, masked)}\r\n              showHeader={false}\r\n              size=\"small\"\r\n              pagination={false}\r\n              bordered\r\n            />\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Table\r\n              columns={oneColumn}\r\n              dataSource={[\r\n                {\r\n                  key: 'right_0',\r\n                  '0': observe(getArr(matrix, 0, true).reverse())\r\n                }, {\r\n                  key: 'right_1',\r\n                  '0': observe(getArr(matrix, 1, true).reverse())\r\n                }, {\r\n                  key: 'right_2',\r\n                  '0': observe(getArr(matrix, 2, true).reverse())\r\n                }, {\r\n                  key: 'right_3',\r\n                  '0': observe(getArr(matrix, 3, true).reverse())\r\n                }\r\n              ]}\r\n              showHeader={false}\r\n              size=\"small\"\r\n              pagination={false}\r\n              bordered\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={14} offset={5}>\r\n            <Table\r\n              columns={columns}\r\n              dataSource={[\r\n                {\r\n                  key: 'row_bottom',\r\n                  '0': observe(getArr(matrix, 0, false).reverse()),\r\n                  '1': observe(getArr(matrix, 1, false).reverse()),\r\n                  '2': observe(getArr(matrix, 2, false).reverse()),\r\n                  '3': observe(getArr(matrix, 3, false).reverse())\r\n                }\r\n              ]}\r\n              showHeader={false}\r\n              size=\"small\"\r\n              pagination={false}\r\n              bordered\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const matrix = cloneMatrix(this.props.data);\r\n    const masked = this.props.masked;\r\n\r\n    return (\r\n      <span style={{ width: '40%' }}>\r\n        {this.genSkyScrapers(matrix, masked)}\r\n        {\r\n          this.props.masked ? <hr /> : null\r\n        }\r\n        {\r\n          this.props.masked ?\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            loading={this.state.isLoading}\r\n            onClick={this.benchmark}\r\n            disabled={!isMatrixValid(this.props.data)}\r\n          >\r\n            Benchmark\r\n          </Button> : null\r\n        }\r\n        {\r\n          this.state.message ?\r\n          <h1 style={{ color: this.state.isError ? 'red' : 'green' }}>{this.state.message}</h1> : null\r\n        }\r\n        {\r\n          this.state.result ?\r\n          this.genSkyScrapers(matrix, false) : null\r\n        }\r\n      </span>\r\n    );\r\n  }\r\n} \r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [\r\n        [1, 2, 3, 4],\r\n        [2, 4, 1, 3],\r\n        [4, 3, 2, 1],\r\n        [3, 1, 4, 2]\r\n      ]\r\n    };\r\n\r\n    this.onMatrixChange = this.onMatrixChange.bind(this);\r\n  }\r\n\r\n  onMatrixChange(v, { row, col }) {\r\n    const updatedData = cloneMatrix(this.state.data);\r\n    updatedData[col][row] = parseInt(v, 10);\r\n    this.setState({\r\n      data: updatedData\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header className=\"App-header\">\r\n          A good day to WASM\r\n        </Header>\r\n        <Content style={{ padding: '50px 50px' }}>\r\n          <Row>\r\n            <Col span={10} offset={7}>\r\n              <Card>\r\n                <h1>Sky Scrapers</h1>\r\n                <SkyScrapersInput\r\n                  data={this.state.data}\r\n                  onMatrixChange={this.onMatrixChange}\r\n                />\r\n                <hr />\r\n                <SkyScrapers\r\n                  data={this.state.data}\r\n                />\r\n                <br />\r\n                {\r\n                  isMatrixValid(this.state.data) ?\r\n                    <h1 style={{ color: 'green' }}>Valid</h1> : <h1 style={{ color: 'red' }}>Invalid</h1>\r\n                }\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col span={10} offset={1}>\r\n              <Card>\r\n                <h1>Vanilla JS</h1>\r\n                <SkyScrapers\r\n                  data={this.state.data}\r\n                  solvePuzzle={solvePuzzleVanillaJs}\r\n                  masked\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <Card>\r\n                <h1>WASM Interoperate</h1>\r\n                <SkyScrapers\r\n                  data={this.state.data}\r\n                  solvePuzzle={solvePuzzleWasmInterops}\r\n                  masked\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col span={10} offset={7}>\r\n              <Card>\r\n                <h1>Vanilla JS vs. WASM Interoperate</h1>\r\n                <SkyScrapers\r\n                  data={this.state.data}\r\n                  solvePuzzle={[solvePuzzleVanillaJs, solvePuzzleWasmInterops]}\r\n                  masked\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Content>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}